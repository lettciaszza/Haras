/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.haras.view;

import br.com.haras.model.Anuncio;
import br.com.haras.model.Cliente;
import br.com.haras.model.Equino;
import br.com.haras.model.Tratamento;
import br.com.haras.view.component.PanelBadge;
import br.com.haras.view.equino.PanelImg;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import net.miginfocom.swing.MigLayout;


public class DetalhesAnuncio extends javax.swing.JFrame {
    private Anuncio anuncio;


    public DetalhesAnuncio(Anuncio anuncio) {
        initComponents();
        
        this.setSize(1080,720);
        
        this.anuncio = anuncio;
        this.initRoot();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        root = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout rootLayout = new javax.swing.GroupLayout(root);
        root.setLayout(rootLayout);
        rootLayout.setHorizontalGroup(
            rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        rootLayout.setVerticalGroup(
            rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setByteImage(byte[] imgBy) {
        if (imgBy == null){
            return;
        }
        ImageIcon img = new ImageIcon(imgBy);
        Image imagemAtual = img.getImage().getScaledInstance(460,460, Image.SCALE_SMOOTH);
        img = new ImageIcon(imagemAtual);
        this.image = new JLabel();
        this.image.setIcon(img);
        this.imageContainer.add(this.image,"center, w 80%, h 80%");
    }
    
    
    private JList gerarListaTratamento(Equino equino){
        
        List<Tratamento> lsTratamento = equino.getLsTratamento();
        if(lsTratamento == null){
            return new JList<>();
        }
        String[] tratamentos = new String[lsTratamento.size()];
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        for (int indice = 0; indice < lsTratamento.size(); indice++) {
            Tratamento tratamento = lsTratamento.get(indice);
            tratamentos[indice] = (tratamento.getTpTratamento().getNome() +" " + tratamento.getDtTratamento().format(formatter));
        }
        return new JList<>(tratamentos);
    }


    
    private void initDetalhesInfo() {
        this.detalhesInfo = new JPanel(new MigLayout("wrap", "[left]","[]6[]4[]")); 
        
        Equino equino = this.anuncio.getEquino()!= null?this.anuncio.getEquino(): new Equino();
        Cliente anunciante = this.anuncio.getAnunciante() != null?this.anuncio.getAnunciante(): new Cliente();

        
        JLabel animalName = new JLabel(equino.getNome()!=null?equino.getNome():"-");
        animalName.setFont(new Font("sansserif", Font.BOLD, 20));
        detalhesInfo.add(animalName);

        String[] valor = ((this.anuncio.getVlAnuncio()!=null?this.anuncio.getVlAnuncio():"0.0").toString() + "00").split("\\.");
        JLabel animalPrice = new JLabel("R$ " + valor[0] + "," + valor[1].substring(0, 2));
        animalPrice.setFont(new Font("sansserif", Font.PLAIN, 24));
        this.detalhesInfo.add(animalPrice);
        
        String name = anunciante.getNome()!=null? anunciante.getNome():"-";
        JLabel anuncianteName = new JLabel("Vendedor: " + name);
        anuncianteName.setFont(new Font("sansserif", Font.PLAIN, 18));
        this.detalhesInfo.add(anuncianteName);
        

        JPanel statusBadge = new PanelBadge(this.anuncio.getStatus().name(),Color.BLUE,Color.white);
        this.detalhesInfo.add(statusBadge);
        
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        JLabel  dtInicio = new JLabel("Anuncio criado em: "+ this.anuncio.getDtInicio()!=null?this.anuncio.getDtInicio().format(formatter):"-");
        dtInicio.setFont(new Font("sansserif", Font.PLAIN, 16));
        this.detalhesInfo.add(dtInicio);
        
        
        String labelDtFim = "finalizaou";
        if(this.anuncio.getDtFim().isAfter(LocalDate.now())){
            labelDtFim = "finaliza";
        }
        JLabel  dtFim = new JLabel("Anuncio " +labelDtFim + " em: "+ this.anuncio.getDtFim()!=null?this.anuncio.getDtFim().format(formatter):"-");
        dtFim.setFont(new Font("sansserif", Font.PLAIN, 16));
        this.detalhesInfo.add(dtFim);
        
        String racaName = equino.getRaca()!=null? equino.getRaca().getNome():"-";
        JLabel raca = new JLabel("Ra√ßa: " + racaName);
        raca.setFont(new Font("sansserif", Font.BOLD, 18));
        this.detalhesInfo.add(raca);
        
        String pesoValue = String.format("%.02f", equino.getVlPeso());
        JLabel peso = new JLabel("Peso: " + pesoValue + " KG");
        peso.setFont(new Font("sansserif", Font.PLAIN, 18));
        this.detalhesInfo.add(peso);
        
        String[] custo = ((equino.getVlCustoMensal()!=null?equino.getVlCustoMensal():"0.0").toString() + "00").split("\\.");
        JLabel custoMensal = new JLabel("R$ " + custo[0] + "," + custo[1].substring(0, 2));
        custoMensal.setFont(new Font("sansserif", Font.PLAIN, 18));
        this.detalhesInfo.add(custoMensal);
        
       // JScrollPane tratamento = new JScrollPane(this.gerarListaTratamento(equino));
       // this.detalhesInfo.add(tratamento);
        
    }

    private void initBtnComprar() {

        this.btnComprar.setSize(new Dimension(274, 48));

        this.btnComprar.setLayout(new MigLayout("fill", "[center]"));

        this.btnComprar.setBackground(new Color(52, 131, 250));
        this.btnComprar.setForeground(Color.WHITE);
        this.btnComprar.setBorderPainted(false);
        this.btnComprar.setText("Comprar");
        this.btnComprar.setFont(new Font("sansserif", Font.BOLD, 16));
        this.btnComprar.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    private void initDetalhesActions() {
        this.detalhesActions = new JPanel(new MigLayout("wrap", "8[center]8","push[bottom]"));

        this.btnComprar = new JButton();

        this.initBtnComprar();

        this.detalhesActions.add(this.btnComprar,"w 100%, h 40px");

    }

    private void initDetalhes() {
        this.detalhes = new JPanel(new MigLayout("wrap", "[left]","[]push[]"));
        this.detalhes.setSize(new Dimension(800, 760));
 

        this.initDetalhesInfo();
        this.initDetalhesActions();

        this.detalhes.add(this.detalhesInfo, "w 100%, h 70%");
        this.detalhes.add(this.detalhesActions, "w 100%, h 30%");

    }

    private void initImageContainer() {
        this.imageContainer = new JPanel();
        // this.imageContainer.setBackground(Color.red);
        this.setByteImage(this.anuncio.getEquino().getImagem());

    }
    
    private void initBody() {
        this.body = new JPanel(new MigLayout("fill", "push[center]4[center]push","[top]"));
        this.body.setSize(new Dimension(1280, 900));
   
        this.initImageContainer();
        this.initDetalhes();
        this.body.add(this.imageContainer, "w 50%, h 100%");
        this.body.add(this.detalhes, "w 50%, h 100%");
        
    }
    
    private void initRoot(){
        this.root.setLayout(new MigLayout("wrap","[center]","[top][]"));
        this.root.setBackground(new Color (128,52,11));
        
        this.header = new JPanel(new MigLayout("","push[center]"));
        this.header.setBackground(new Color (128,52,11));
        PanelImg img = new PanelImg(new ImageIcon(getClass().getResource("/imgs/historicoMedico/Logo.png")).getImage());
        this.header.add(img,"w 100px, h 100px");
        
        this.initBody();
        this.root.add(this.header,"w 100%, h 20%");
        this.root.add(this.body, "w 900px, h 70%");
        this.root.revalidate();
    }
    
    private javax.swing.JPanel body;
    private javax.swing.JPanel header;
    
    private javax.swing.JPanel detalhes;
    private javax.swing.JLabel image;
    private javax.swing.JPanel imageContainer;

    private javax.swing.JPanel detalhesInfo;
    private javax.swing.JPanel detalhesActions;

    private JButton btnComprar;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel root;
    // End of variables declaration//GEN-END:variables
}
