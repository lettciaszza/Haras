/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.com.haras.view.equino;

import br.com.haras.controller.EquinoController;
import br.com.haras.model.Cliente;
import br.com.haras.view.component.swing.ButtonOutLine;
import br.com.haras.view.component.swing.MyButton;
import br.com.haras.view.component.swing.MyFormattedTextField;
import br.com.haras.view.component.swing.MyTextField;
import br.com.haras.view.component.swing.SearchableComboBox;
import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.concurrent.Callable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author alice
 */
public class EquinoPn extends javax.swing.JPanel {

    /**
     * Creates new form EquinoPn
     */
    public EquinoPn(ActionListener evtSave, List<String> lsRaca,ActionListener eventBuscarProprietario) {
        initComponents();
        init(evtSave);
        panelCampos = new CamposPn(evtSave, lsRaca,eventBuscarProprietario);
        this.add(panelCampos,"w 80%, h 85% , span, pad 0 -10 10 5");
    }
    public EquinoPn(ActionListener evtSave,HashMap<String,String> infoEquino, List<String> lsRaca, Cliente proprietario, ActionListener eventBuscarProprietario ) {
        initComponents();
        init(evtSave);
        panelCampos = new CamposPn(evtSave, infoEquino, lsRaca, proprietario, eventBuscarProprietario);
        this.add(panelCampos,"w 80%, h 85% , span, pad 0 -10 10 5");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void init(ActionListener evtSave){
        
        this.setBackground(new Color(255,255,255));
        
        JPanel panelTitulo = new JPanel();
        panelTitulo.setLayout(new MigLayout("fill","[center]","push[center]push"));
        panelTitulo.setBackground(new Color (204, 83, 18));
        JLabel titulo = new JLabel("Gerenciar Equino");
        titulo.setFont(new Font("sansserif",3,36));
        titulo.setForeground(Color.white);
        panelTitulo.add(titulo);
      
        layout = new MigLayout("fill","[center]20[center]","[top]push[]");
        setLayout(layout);
        
        this.add(panelTitulo,"span,w 100%,h 15%, pad -10 -15 0 5, wrap");
        
        
    }
    public HashMap<String, String> getEquinoInfo() {
        return panelCampos.getEquinoInfo();
    }
    public Cliente getProprietario(){
        return panelCampos.getProprietario();
    }
    public void setProprietario(Cliente proprietario){
        panelCampos.setProprietario(proprietario);
    }
    private MigLayout layout;
    private CamposPn panelCampos;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
class CamposPn extends javax.swing.JPanel{
    public HashMap<String, String> equinoInfo ;
    private MyTextField edtNome;
    private MyTextField edtVlPeso;
    private MyTextField edtVlCustoMensal;
    private MyTextField edtProprietario;
    private MyFormattedTextField edtDtNascimento;
    private MyButton btnFindProprietario;
    private ButtonOutLine btnCancelar;
    private ButtonOutLine btnSalvar;
    private ButtonOutLine btnCalcular;
    private Cliente proprietario;
    private EquinoController eqController = new EquinoController();
    
    SearchableComboBox comboBox; 
    
     public CamposPn(ActionListener evtSave, List<String> lsRaca, ActionListener eventBuscarProprietario){
        equinoInfo = new HashMap<>();
        proprietario = new Cliente();
        init(evtSave, lsRaca, eventBuscarProprietario);
    }
    public CamposPn(ActionListener evtSave, HashMap<String,String> infoEquino, List<String> lsRaca, Cliente proprietario, ActionListener eventBuscarProprietario){
        init(evtSave, lsRaca,  eventBuscarProprietario);
        this.equinoInfo = infoEquino;
        this.proprietario = proprietario;
        mapCamposEq();
        btnFindProprietario.setEnabled(false);
        
    }
    
    public HashMap<String, String> getEquinoInfo() {
        return equinoInfo;
    }
   
    public Cliente getProprietario(){
        return proprietario;
    }
    public void setProprietario(Cliente proprietario){
        this.proprietario = proprietario;
        edtProprietario.setText(this.proprietario.getNome());
    }
   
    private void mapCamposEq(){
        edtVlPeso.setText(equinoInfo.get("vlPeso"));
        edtDtNascimento.setValue(formataData(equinoInfo.get("dtNascimento")));
        edtNome.setText(equinoInfo.get("nome"));
        edtVlCustoMensal.setText(formataValor(new BigDecimal(equinoInfo.get("vlCustoMensal"))));
        edtProprietario.setText(equinoInfo.get("proprietario"));
        
    }




    private String formataData(String data){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String dataFormatted =LocalDate.parse(data).format(formatter);
        return  dataFormatted;
    }
    private String formataValor(BigDecimal valor){
        DecimalFormat formatoPersonalizado = new DecimalFormat("R$ 00.00");
        String valorFormatado = formatoPersonalizado.format(valor);
        return valorFormatado;
    }
    
    
    private void init(ActionListener evtSave, List<String> lsRaca, ActionListener eventBuscarProprietario){
        
        setBackground(Color.WHITE);
        this.setLayout(new MigLayout("wrap","push[]12[]20[]12[]push","90[]20[]20[]35[]35[]push"));
        JLabel nome = new JLabel("Nome");
        nome.setFont(new Font("sansserif",1,15));
        nome.setForeground(new Color(74,37,20));
        edtNome = new MyTextField();
        this.add(nome);
        this.add(edtNome, "w 30%");

        JLabel lblDtNascimento = new JLabel("Data de Nascimento");
        lblDtNascimento.setFont(new Font("sansserif",1,15));
        lblDtNascimento.setForeground(new Color(74,37,20));
        edtDtNascimento = new MyFormattedTextField();
        try{
            MaskFormatter maskData = new MaskFormatter("##/##/####");
            maskData.setPlaceholderCharacter('-');
            
            maskData.install(edtDtNascimento);
        }catch(ParseException e){
            
        }
        this.add(lblDtNascimento,"");
        this.add(edtDtNascimento,"w 30%");
        
       
        
        JLabel lblRaca = new JLabel("Raça");
        lblRaca.setFont(new Font("sansserif",1,15));
        this.add(lblRaca,"");
        lblRaca.setForeground(new Color(74,37,20));
        
        //buscar as raças
        comboBox = new SearchableComboBox();
        comboBox.setModel(new DefaultComboBoxModel(lsRaca.toArray()));
        this.add(comboBox, "w 30%, h 35");
        
        JLabel lblVlPeso = new JLabel("Peso");
        lblVlPeso.setFont(new Font("sansserif",1,15));
        lblVlPeso.setForeground(new Color(74,37,20));
        edtVlPeso = new MyTextField();
        edtVlPeso.setHint("0.0 Kg");
        this.add(lblVlPeso,"");
        this.add(edtVlPeso,"w 40%, left");
        
        JLabel lblProprietario = new JLabel("Proprietário");
        lblProprietario.setFont(new Font("sansserif",1,15));
        lblProprietario.setForeground(new Color(74,37,20));
        edtProprietario = new MyTextField();
        edtProprietario.setEditable(false);
        this.add(lblProprietario);
        this.add(edtProprietario,"w 30%");
        btnFindProprietario = new MyButton();
        btnFindProprietario.setBackground(new Color(128,52,11));
        btnFindProprietario.setForeground(new Color(250,250,250));
        
        btnFindProprietario.setFocusable(false);
        btnFindProprietario.setText("proprietario");
        btnFindProprietario.addActionListener(eventBuscarProprietario);
        btnFindProprietario.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ev){
                System.out.println("busca");
            }
        });
        this.add(btnFindProprietario, "w 20%, h 35");
        
        JLabel vlCustoMensal = new JLabel("Custo Mensal");
        vlCustoMensal.setFont(new Font("sansserif",1,15));
        vlCustoMensal.setForeground(new Color(74,37,20));
        edtVlCustoMensal = new MyTextField();
        edtVlCustoMensal.setEditable(false);
        this.add(vlCustoMensal,"skip 1");
        this.add(edtVlCustoMensal,"w 30%, left");
        
        this.btnCalcular = new ButtonOutLine();
        btnCalcular.setBackground(new Color(204, 83, 18));
        btnCalcular.setForeground(new Color(204, 83, 18));
        btnCalcular.setFocusable(false);
        btnCalcular.setText("CALCULAR"); 
        btnCalcular.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ev){
                 equinoInfo.put("dtNascimento",edtDtNascimento.getText().trim());
                    equinoInfo.put("raca","");
                    equinoInfo.put("nome", edtNome.getText());
                    
                    equinoInfo.put("vlPeso",edtVlPeso.getText().trim());
                    String racaSelecionada =comboBox.getSelectedItem().toString(); 
                    String id = racaSelecionada.substring(racaSelecionada.indexOf(".")+1);
                    equinoInfo.put("idRaca", id);
                BigDecimal valor = eqController.calcular(equinoInfo);
                String vlFormatado = formataValor(valor);
                equinoInfo.put("vlCustoMensal",vlFormatado);
                edtVlCustoMensal.setText(vlFormatado);
            }
        });
        this.add(btnCalcular,"w 25%, span 2, left");
        
        this.btnCancelar = new ButtonOutLine();
        btnCancelar.setBackground(new Color(204,0 , 0));
        btnCancelar.setForeground(new Color(204, 0, 0));
        btnCancelar.setFocusable(false);
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ev){
                edtDtNascimento.setValue("");
                edtNome.setText("");
                edtProprietario.setText("");
                edtVlCustoMensal.setText("");
                edtVlPeso.setText("");
                equinoInfo.clear();
                btnFindProprietario.setEnabled(true);
                
            }
        });
        this.add(btnCancelar," w 250, center");
        
        this.btnSalvar = new ButtonOutLine();
        btnSalvar.setBackground(new Color(0, 153, 0));
        btnSalvar.setForeground(new Color(0, 153, 0));
        btnSalvar.setFocusable(false);
        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(evtSave);
        btnSalvar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                    equinoInfo.put("dtNascimento",edtDtNascimento.getText().trim());
                    equinoInfo.put("raca","");
                    equinoInfo.put("nome", edtNome.getText());
                    String vlcusto = edtVlCustoMensal.getText();
                    vlcusto = vlcusto.replaceAll("[^\\d.,]", "").replace(",", ".");
                    System.out.println("custo "+vlcusto);
                    equinoInfo.put("vlCustoMensal",vlcusto);
                    equinoInfo.put("vlPeso",edtVlPeso.getText().trim());
                    String racaSelecionada =comboBox.getSelectedItem().toString(); 
                    String id = racaSelecionada.substring(racaSelecionada.indexOf(".")+1);
                    equinoInfo.put("idRaca", id);
                
            }
            
        });
        this.add(btnSalvar,"skip 2,w 250, center");
        
        
        
    }
    
}